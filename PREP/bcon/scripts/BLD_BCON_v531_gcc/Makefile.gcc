#   Makefile generated for serial execution using program bldmake
#
#   Generation date [05/28/2020  09:20:06]
#   Configuration file [BCON_v531.cfg.bld]
#   Using GIT repository [/nuist/scratch/pb02005030/lism/CMAQ5.3/PREP/bcon/src]
#   Full Compiler Paths when Makefile was Built:
#       FC = /nuist/p/public/app/mvapich2/2.3/gnu/4.8.5/bin/mpifort
#       CC = /usr/bin/cc
#   Library Paths:
#      $(LIB)/ioapi/include_files -> /nuist/scratch/pb02005030/pb02005030/CMAQ5.0.1/ioapi-3.2/ioapi/fixed_src
#      $(LIB)/ioapi/lib -> /nuist/scratch/pb02005030/pb02005030/CMAQ5.0.1/ioapi-3.2/Linux2_x86_64
#      $(LIB)/mpi -> /nuist/p/public/app/mvapich2/2.3/gnu/4.8.5
#      $(LIB)/netcdf -> /nuist/p/public/app/netcdf/4.3.0/gnu/4.8.5/lib
#      $(LIB)/netcdff -> /nuist/p/public/app/netcdf/4.3.0/gnu/4.8.5/lib
#
#   Command-Line Options:      
#      DEBUG = TRUE or true -- turn on debug flags 
#  OR  debug = true or TRUE -- turn on debug flags 
#  Can set either variable by using the setenv command for
#  a debugging session with multiple compilations
#
#------------------------------------------------- 

 EXEC = BCON_v531.exe

 FC = mpifort
 CC = cc

 LIB = /nuist/scratch/pb02005030/lism/CMAQ5.3/lib/x86_64/gcc
 include_path = -I $(LIB)/ioapi/lib \
                -I $(LIB)/ioapi/include_files

 WARN = 
 FSTD = -O3 -funroll-loops -finit-character=32 -Wtabs -Wsurprising -march=native -ftree-vectorize  -ftree-loop-if-convert -finline-limit=512
 DBG  = -Wall -O0 -g -fcheck=all -ffpe-trap=invalid,zero,overflow -fbacktrace

 ifneq (,$(filter $(debug), TRUE true True T ))
     DEBUG = TRUE
 endif

 ifneq (,$(filter $(DEBUG), TRUE true ))
     f_FLAGS   = -ffixed-form -ffixed-line-length-132 -funroll-loops -finit-character=32 $(DBG) $(include_path)
     f90_FLAGS = -ffree-form -ffree-line-length-none -funroll-loops -finit-character=32 $(DBG) $(include_path)
 else
     f_FLAGS   = -ffixed-form -ffixed-line-length-132 -funroll-loops -finit-character=32 $(FSTD) $(include_path)
     f90_FLAGS = -ffree-form -ffree-line-length-none -funroll-loops -finit-character=32 $(FSTD) $(include_path)
 endif

 F_FLAGS   = $(f_FLAGS)
 F90_FLAGS = $(f90_FLAGS)
 C_FLAGS   = -I.

 LINKER     = $(FC)
 LINK_FLAGS = -fopenmp

 REPOROOT = /nuist/scratch/pb02005030/lism/CMAQ5.3/PREP/bcon/src

 CPP = $(FC)
 cpp_flags = 

 ifneq (,$(filter $(isam), TRUE true True T ))
     CPP_FLAGS   = $(cpp_flags) -Disam
 else
     CPP_FLAGS   = $(cpp_flags)
 endif

 IOAPI  = -L$(LIB)/ioapi/lib -lioapi
 NETCDF = -L$(LIB)/netcdff/lib -lnetcdff -L$(LIB)/netcdf/lib -lnetcdf
 LIBRARIES = $(IOAPI) $(NETCDF)


GLOBAL_MODULES = \
  BC_PARMS.o \
  HGRD_DEFN.o \
  VGRD_DEFN.o

COMMON = \
  bcon.o \
  findex.o \
  lat_lon.o \
  lr_interp.o \
  opn_bc_file.o

M3CONC = \
  m3_bcout.o \
  m3_ck_bdy.o \
  m3_ck_ctms.o \
  m3_ck_met.o \
  m3_driver.o \
  m3_vinterp.o

PROFILE = \
  prof_bcout.o \
  prof_driver.o \
  prof_vinterp.o

OBJS = \
  $(GLOBAL_MODULES) \
  $(COMMON) \
  $(M3CONC) \
  $(PROFILE)

.SUFFIXES: .F .f .c .F90 .f90

$(EXEC): $(OBJS)
	$(LINKER) $(LINK_FLAGS) $(OBJS) $(LIBRARIES) -o $@

.F.o:
	$(FC) -c $(F_FLAGS) $(CPP_FLAGS) $(INCLUDES) $<

.f.o:
	$(FC) -c $(F_FLAGS) $<

.F90.o:
	$(FC) -c $(F90_FLAGS) $(CPP_FLAGS) $(INCLUDES) $<

.f90.o:
	$(FC) -c $(F90_FLAGS) $<

.c.o:
	$(CC) -c $(C_FLAGS) $<

clean:
	rm -f $(OBJS) *.mod


# dependencies

bcon.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
opn_bc_file.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
m3_bcout.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
m3_ck_bdy.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
m3_ck_ctms.o:	BC_PARMS.o
m3_ck_met.o:	BC_PARMS.o
m3_driver.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
m3_vinterp.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
prof_bcout.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
prof_driver.o:	BC_PARMS.o
prof_vinterp.o:	HGRD_DEFN.o VGRD_DEFN.o BC_PARMS.o
